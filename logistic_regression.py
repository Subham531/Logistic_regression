# -*- coding: utf-8 -*-
"""Logistic_regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HnlXU6OeamdJvePyWLVeFeKMS8R2_DyX
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import math

df  = pd.read_csv('logistic regression dataset-Social_Network_Ads.csv')
df.columns

df.head()

df.drop('User ID',axis=1).head()

x = df.EstimatedSalary
y= df.Purchased
plt.scatter(x,y,color = 'red')

min = x[0]
max = x[0]

for i in range(len(x)):
  if x[i] < min:
    min = x[i]
  elif x[i] > max:
    max = x[i]

# print(min,max)

def loss(w,x,y,b):
  ttl_loss = 0
  for i in range(len(x)):
    ttl_loss+= (w*(1/(1+np.exp(-x[i]))) + b - y[i] )**2
  return ttl_loss

#normalizing
for i in range(len(x)):
  x[i] = (x[i]-min)/(max-min)

plt.scatter(x,y,color = 'red');

loss_history  = []
np.random.seed(3)
w = np.random.normal(loc = 0,scale = 1)
b = np.random.normal(loc = 0,scale =1)
epochs = len(x)
lr = 0.00001
for i in range(epochs):
  epoch_loss = 0
  for j in range(len(x)):
    epoch_loss = loss(w,x,y,b)
    dw = 2*(w*(1/(1+np.exp(-x[j]))) + b - y[j])*(1/(1+np.exp(-x[j])))
    db = 2*(w*(1/(1+np.exp(-x[j]))) + b - y[j])
    w = w - lr*dw
    b = b - lr*db
  print(f'epoch {i} = {epoch_loss}')
  loss_history.append(epoch_loss)

plt.plot(loss_history)
plt.show()

x_plt=np.linspace(-8,8,10000)
y_pred = []
for i in range(len(x_plt)):
  y_pred.append((1/(1+np.exp(-x_plt[i]))))

plt.plot(x_plt,y_pred,color='red')
plt.scatter(x,y,color='blue')
plt.show()

